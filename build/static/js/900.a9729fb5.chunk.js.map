{"version":3,"file":"static/js/900.a9729fb5.chunk.js","mappings":"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","sources":["jsx/pages/Registration.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport {\n  loadingToggleAction,\n  signupAction,\n} from \"../../store/actions/AuthActions\";\n\nfunction Register(props) {\n  const [formData, setFormData] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  });\n  const [errors, setErrors] = useState({});\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const validateForm = () => {\n    let tempErrors = {};\n    let isValid = true;\n\n    if (!formData.username.trim()) {\n      tempErrors.username = \"El nombre de usuario es requerido\";\n      isValid = false;\n    }\n\n    if (!formData.email) {\n      tempErrors.email = \"El email es requerido\";\n      isValid = false;\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\n      tempErrors.email = \"Email inválido\";\n      isValid = false;\n    }\n\n    if (!formData.password) {\n      tempErrors.password = \"La contraseña es requerida\";\n      isValid = false;\n    } else if (formData.password.length < 6) {\n      tempErrors.password = \"La contraseña debe tener al menos 6 caracteres\";\n      isValid = false;\n    }\n\n    if (formData.password !== formData.confirmPassword) {\n      tempErrors.confirmPassword = \"Las contraseñas no coinciden\";\n      isValid = false;\n    }\n\n    setErrors(tempErrors);\n    return isValid;\n  };\n\n  const onSignUp = (e) => {\n    e.preventDefault();\n    if (validateForm()) {\n      dispatch(loadingToggleAction(true));\n      dispatch(signupAction(formData.email, formData.password, navigate));\n    }\n  };\n\n  return (\n    <div className=\"container-fluid p-0\">\n      <div className=\"row g-0 min-vh-100\">\n        {/* Lado izquierdo - Imagen */}\n        <div\n          className=\"col-lg-6 d-none d-lg-flex\"\n          style={{\n            backgroundColor: \"#FF6B00\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <div className=\"text-center p-5\">\n            <img\n              src=\"/logo.png\"\n              alt=\"Logo\"\n              style={{ maxWidth: \"300px\", marginBottom: \"2rem\" }}\n            />\n            <h2 className=\"text-white mb-4\">Bienvenido al Sistema</h2>\n            <p className=\"text-white-50\">\n              Crea una cuenta para comenzar a gestionar tus pedidos\n            </p>\n          </div>\n        </div>\n\n        {/* Lado derecho - Formulario */}\n        <div className=\"col-lg-6 d-flex align-items-center\">\n          <div className=\"w-100 p-4 p-lg-5\">\n            <div className=\"mb-5\">\n              <img\n                src=\"/logo.png\"\n                alt=\"Logo\"\n                className=\"d-lg-none\"\n                style={{ maxWidth: \"200px\", marginBottom: \"2rem\" }}\n              />\n              <h3 className=\"fw-bold\">Crear Cuenta</h3>\n              <p className=\"text-muted\">Ingresa tus datos para registrarte</p>\n            </div>\n\n            {props.errorMessage && (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                {props.errorMessage}\n              </div>\n            )}\n\n            {props.successMessage && (\n              <div className=\"alert alert-success\" role=\"alert\">\n                {props.successMessage}\n              </div>\n            )}\n\n            <form onSubmit={onSignUp}>\n              <div className=\"mb-4\">\n                <label className=\"form-label\">Nombre de Usuario</label>\n                <input\n                  type=\"text\"\n                  name=\"username\"\n                  className={`form-control ${\n                    errors.username ? \"is-invalid\" : \"\"\n                  }`}\n                  value={formData.username}\n                  onChange={handleChange}\n                  placeholder=\"Usuario\"\n                />\n                {errors.username && (\n                  <div className=\"invalid-feedback\">{errors.username}</div>\n                )}\n              </div>\n\n              <div className=\"mb-4\">\n                <label className=\"form-label\">Email</label>\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  className={`form-control ${errors.email ? \"is-invalid\" : \"\"}`}\n                  value={formData.email}\n                  onChange={handleChange}\n                  placeholder=\"ejemplo@correo.com\"\n                />\n                {errors.email && (\n                  <div className=\"invalid-feedback\">{errors.email}</div>\n                )}\n              </div>\n\n              <div className=\"mb-4\">\n                <label className=\"form-label\">Contraseña</label>\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  className={`form-control ${\n                    errors.password ? \"is-invalid\" : \"\"\n                  }`}\n                  value={formData.password}\n                  onChange={handleChange}\n                />\n                {errors.password && (\n                  <div className=\"invalid-feedback\">{errors.password}</div>\n                )}\n              </div>\n\n              <div className=\"mb-4\">\n                <label className=\"form-label\">Confirmar Contraseña</label>\n                <input\n                  type=\"password\"\n                  name=\"confirmPassword\"\n                  className={`form-control ${\n                    errors.confirmPassword ? \"is-invalid\" : \"\"\n                  }`}\n                  value={formData.confirmPassword}\n                  onChange={handleChange}\n                />\n                {errors.confirmPassword && (\n                  <div className=\"invalid-feedback\">\n                    {errors.confirmPassword}\n                  </div>\n                )}\n              </div>\n\n              <button\n                type=\"submit\"\n                className=\"btn btn-lg w-100\"\n                style={{\n                  backgroundColor: \"#FF6B00\",\n                  color: \"white\",\n                  border: \"none\",\n                }}\n                disabled={props.showLoading}\n              >\n                {props.showLoading ? (\n                  <span className=\"spinner-border spinner-border-sm me-2\"></span>\n                ) : null}\n                Registrarse\n              </button>\n            </form>\n\n            <div className=\"text-center mt-4\">\n              <p className=\"mb-0 text-muted\">\n                ¿Ya tienes una cuenta?{\" \"}\n                <Link to=\"/login\" className=\"text-primary\">\n                  Inicia sesión aquí\n                </Link>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  errorMessage: state.auth.errorMessage,\n  successMessage: state.auth.successMessage,\n  showLoading: state.auth.showLoading,\n});\n\nexport default connect(mapStateToProps)(Register);\n"],"names":["connect","state","errorMessage","auth","successMessage","showLoading","props","formData","setFormData","useState","username","email","password","confirmPassword","errors","setErrors","dispatch","useDispatch","navigate","useNavigate","handleChange","e","target","name","value","_jsx","className","children","_jsxs","style","backgroundColor","alignItems","justifyContent","src","alt","maxWidth","marginBottom","role","onSubmit","preventDefault","validateForm","tempErrors","isValid","trim","test","length","loadingToggleAction","signupAction","type","concat","onChange","placeholder","color","border","disabled","Link","to"],"sourceRoot":""}