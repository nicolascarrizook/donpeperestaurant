{"version":3,"file":"static/js/680.4b8c9239.chunk.js","mappings":"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","sources":["jsx/pages/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport {\n  loadingToggleAction,\n  loginAction,\n} from \"../../store/actions/AuthActions\";\n\nfunction Login(props) {\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState({ email: \"\", password: \"\" });\n  const dispatch = useDispatch();\n\n  const onLogin = (e) => {\n    e.preventDefault();\n    let error = false;\n    const errorObj = { email: \"\", password: \"\" };\n\n    if (email === \"\") {\n      errorObj.email = \"El email es requerido\";\n      error = true;\n    }\n    if (password === \"\") {\n      errorObj.password = \"La contraseña es requerida\";\n      error = true;\n    }\n\n    setErrors(errorObj);\n    if (error) return;\n\n    dispatch(loadingToggleAction(true));\n    dispatch(loginAction(email, password, navigate));\n  };\n\n  return (\n    <div className=\"container-fluid p-0\">\n      <div className=\"row g-0 min-vh-100\">\n        {/* Lado izquierdo - Imagen */}\n        <div\n          className=\"col-lg-6 d-none d-lg-flex\"\n          style={{\n            backgroundColor: \"#FF6B00\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <div className=\"text-center p-5\">\n            <img\n              src=\"/logo.png\"\n              alt=\"Logo\"\n              style={{ maxWidth: \"300px\", marginBottom: \"2rem\" }}\n            />\n            <h2 className=\"text-white mb-4\">Sistema de Gestión de Pedidos</h2>\n            <p className=\"text-white-50\">\n              Administra tus pedidos de manera eficiente y sencilla\n            </p>\n          </div>\n        </div>\n\n        {/* Lado derecho - Formulario */}\n        <div className=\"col-lg-6 d-flex align-items-center\">\n          <div className=\"w-100 p-4 p-lg-5\">\n            <div className=\"mb-5\">\n              <img\n                src=\"/logo.png\"\n                alt=\"Logo\"\n                className=\"d-lg-none\"\n                style={{ maxWidth: \"200px\", marginBottom: \"2rem\" }}\n              />\n              <h3 className=\"fw-bold\">Iniciar Sesión</h3>\n              <p className=\"text-muted\">\n                Ingresa tus credenciales para continuar\n              </p>\n            </div>\n\n            {props.errorMessage && (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                {props.errorMessage}\n              </div>\n            )}\n\n            {props.successMessage && (\n              <div className=\"alert alert-success\" role=\"alert\">\n                {props.successMessage}\n              </div>\n            )}\n\n            <form onSubmit={onLogin}>\n              <div className=\"mb-4\">\n                <label className=\"form-label\">Email</label>\n                <input\n                  type=\"email\"\n                  className={`form-control ${errors.email ? \"is-invalid\" : \"\"}`}\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  placeholder=\"ejemplo@correo.com\"\n                />\n                {errors.email && (\n                  <div className=\"invalid-feedback\">{errors.email}</div>\n                )}\n              </div>\n\n              <div className=\"mb-4\">\n                <label className=\"form-label\">Contraseña</label>\n                <input\n                  type=\"password\"\n                  className={`form-control ${\n                    errors.password ? \"is-invalid\" : \"\"\n                  }`}\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n                {errors.password && (\n                  <div className=\"invalid-feedback\">{errors.password}</div>\n                )}\n              </div>\n\n              <div className=\"mb-4\">\n                <div className=\"form-check\">\n                  <input\n                    type=\"checkbox\"\n                    className=\"form-check-input\"\n                    id=\"rememberMe\"\n                  />\n                  <label className=\"form-check-label\" htmlFor=\"rememberMe\">\n                    Recordar sesión\n                  </label>\n                </div>\n              </div>\n\n              <button\n                type=\"submit\"\n                className=\"btn btn-lg w-100\"\n                style={{\n                  backgroundColor: \"#FF6B00\",\n                  color: \"white\",\n                  border: \"none\",\n                }}\n                disabled={props.showLoading}\n              >\n                {props.showLoading ? (\n                  <span className=\"spinner-border spinner-border-sm me-2\"></span>\n                ) : null}\n                Ingresar\n              </button>\n            </form>\n\n            <div className=\"text-center mt-4\">\n              <p className=\"mb-0 text-muted\">\n                ¿No tienes una cuenta?{\" \"}\n                <NavLink to=\"/page-register\" className=\"text-primary\">\n                  Regístrate aquí\n                </NavLink>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  errorMessage: state.auth.errorMessage,\n  successMessage: state.auth.successMessage,\n  showLoading: state.auth.showLoading,\n});\n\nexport default connect(mapStateToProps)(Login);\n"],"names":["connect","state","errorMessage","auth","successMessage","showLoading","props","navigate","useNavigate","email","setEmail","useState","password","setPassword","errors","setErrors","dispatch","useDispatch","_jsx","className","children","_jsxs","style","backgroundColor","alignItems","justifyContent","src","alt","maxWidth","marginBottom","role","onSubmit","e","preventDefault","error","errorObj","loadingToggleAction","loginAction","type","concat","value","onChange","target","placeholder","id","htmlFor","color","border","disabled","NavLink","to"],"sourceRoot":""}